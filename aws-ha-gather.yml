---
- name: Gather HA Data
  hosts: aws
  connection: local

  tasks:
    - set_fact: hostname={{ansible_host}}

    - name: gather ec2 facts
      local_action: command aws ec2 describe-instances --filter "Name=tag:Name,Values={{ hostname }}" "Name=instance-state-name,Values=running"  
      register: ec2_facts
    - set_fact: ec2_facts_json="{{ ec2_facts.stdout|from_json }}"
    - set_fact: public_ip="{{ ec2_facts_json.Reservations[0].Instances[0].PublicIpAddress }}"
    - debug: var=public_ip
    - set_fact: private_ip="{{ ec2_facts_json.Reservations[0].Instances[0].PrivateIpAddress }}"
    - set_fact: eni="{{ ec2_facts_json.Reservations[0].Instances[0].NetworkInterfaces[0].NetworkInterfaceId }}"
    - set_fact: vpc_id="{{ ec2_facts_json.Reservations[0].Instances[0].NetworkInterfaces[0].VpcId }}"
    - set_fact: subnet_id="{{ ec2_facts_json.Reservations[0].Instances[0].NetworkInterfaces[0].SubnetId }}"

    - name: gather rtb facts
      local_action: command aws ec2 describe-route-tables --filter "Name=vpc-id,Values={{vpc_id}}" "Name=association.main,Values=true"
      register: rtb_facts
    - set_fact: rtb_facts_json="{{ rtb_facts.stdout|from_json }}"
    - set_fact: rtb_id="{{ rtb_facts_json.RouteTables[0].RouteTableId }}"

    - name: gather vpc facts
      local_action: command aws ec2 describe-vpcs --filter "Name=vpc-id,Values={{vpc_id}}"
      register: vpc_facts
    - set_fact: vpc_facts_json="{{ vpc_facts.stdout|from_json }}"
    - set_fact: vpc_cidr="{{ vpc_facts_json.Vpcs[0].CidrBlock }}"

    - name: gather subnet facts
      local_action: command aws ec2 describe-subnets --filter "Name=subnet-id,Values={{subnet_id}}"
      register: subnet_facts
    - set_fact: subnet_facts_json="{{ subnet_facts.stdout|from_json}}"
    - set_fact: subnet_cidr="{{ subnet_facts_json.Subnets[0].CidrBlock}}"

    - set_fact: route_cidr="0.0.0.0/0 "

    - local_action: command ./genhostvars.py {{ hostname }} {{ eni }} {{ vpc_cidr }} {{ rtb_id }} {{ private_ip }} {{ subnet_cidr }} {{ route_cidr }}
    