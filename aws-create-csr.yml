---
- name: Create CSR Instances
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    aws_region: us-west-1
    csr_ami: ami-4bf7842b
    key_name: chockerva-fedcsn
    vpc_id: vpc-7cb4cf19
    subnet_id: subnet-35a3d66c
    security_group: sg-332c9257

  tasks:
    - name: Creating CSR {{ hostname }}
      ec2:
        key_name: '{{ key_name }}'
        region: '{{ aws_region }}'
        instance_type: m3.medium
        instance_tags:
          Name: '{{ hostname }}'
          Role: router1
          Owner: chocker
          Tenant: tenant1
        image: '{{ csr_ami }}'
        wait: yes
        exact_count: 1
        count_tag: 
          - Name: '{{ hostname }}'
        vpc_subnet_id: '{{ subnet_id }}'
        assign_public_ip: yes
        private_ip: '{{ private_ip }}'
        group_id: '{{ security_group }}'
        source_dest_check: no
        instance_profile_name: ReplaceRouteRole
        user_data: 'ios-config-0001=hostname {{ hostname }}'
      register: csr

    - debug: var=hostvars[inventory_hostname]

    - name: Collecting Public IP
      set_fact: public_ip={{ csr.tagged_instances[0].public_ip }}
      when: csr.tagged_instances[0] is defined

    - name: Collecting Instance ID
      set_fact: instance_id={{ csr.tagged_instances[0].id }}
      when: csr.tagged_instances[0] is defined

    - name: Update Inventory
      lineinfile: dest=./hosts regexp="{{ hostname }}" line="{{ hostname }} public_ip={{ public_ip }} instance_id={{ instance_id }}"
      when: csr.tagged_instances[0] is defined

   # - name: Waiting for CSR to finish booting
   #   local_action: wait_for port=22 host="{{ public_ip }}" timeout=600 delay=300

   # - debug: msg="{{ hostname }} is ready for configuration"

